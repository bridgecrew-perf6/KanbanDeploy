{"ast":null,"code":"var _jsxFileName = \"/app/app/javascript/components/index.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nexport default function Counter_component() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var incrementCount = function incrementCount() {\n    setCount(count + 1);\n  };\n\n  var decrementCount = function decrementCount() {\n    setCount(count - 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Count:\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: decrementCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"decrement\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"increment\"));\n}","map":{"version":3,"sources":["/app/app/javascript/components/index.jsx"],"names":["React","useState","Counter_component","count","setCount","incrementCount","decrementCount"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,kBAA0BD,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAIC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAIA,MAAIG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBF,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CAFF,eAGE;AAAQ,IAAA,OAAO,EAAEG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAQ,IAAA,OAAO,EAAED,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF;AAQD","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Counter_component() {\n  const [count, setCount] = useState(0);\n\n  let incrementCount = () => {\n    setCount(count + 1);\n  };\n\n  let decrementCount = () => {\n    setCount(count - 1);\n  };\n\n  return (\n    <div className=\"app\">\n      <h3>Count:</h3>\n      <h1>{count}</h1>\n      <button onClick={decrementCount}>decrement</button> \n      <button onClick={incrementCount}>increment</button> \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}